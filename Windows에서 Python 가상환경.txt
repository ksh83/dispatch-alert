Windows에서 Python 가상환경(venv)을 만드는 방법은 아래와 같습니다. 기본적으로 Python이 설치되어 있으면 명령 프롬프트(cmd)에서 손쉽게 생성할 수 있습니다.[1][2]

***
### 가상환경 생성 방법

1. **명령 프롬프트(cmd) 실행**

- Windows 검색창에서 'cmd'를 입력해 명령 프롬프트를 실행합니다.[1]

2. **작업 디렉토리 이동**

- 원하는 폴더로 이동하세요. 예시:
```sh
cd C:\Users\내이름\myproject
```


3. **가상환경 생성**

- 아래 명령어 입력:
```sh
python -m venv venv
```
- `venv`는 가상환경 폴더 이름입니다. 원하는 이름으로 바꿀 수 있습니다.[1]

4. **가상환경 활성화**

- 아래 명령어 입력:
```sh
venv\Scripts\activate
```
- 프롬프트에 `(venv)`가 추가되며, 가상환경이 활성화됩니다.[2][1]

***

### 주요 사용 명령어

- **비활성화**: 가상환경을 종료하려면 아래 명령어 입력
```sh
deactivate
```


- **가상환경에 패키지 설치**
```sh
pip install 패키지명
```


***

### 참고 사항

- Python이 설치되어 있어야 하며, 설치 경로에 따라 명령이 다를 수 있습니다.[1]
- 가상환경은 프로젝트별 독립적인 Python 패키지 관리에 사용됩니다.[2]

이 과정대로 하면 Windows 명령 프롬프트에서 안전하게 Python 가상환경을 생성·관리할 수 있습니다.Windows 환경에서 Python 가상환경(venv)을 만드는 방법은 다음과 같습니다. 아래 순서를 따라하면 명령 프롬프트(cmd)에서 쉽게 가상환경을 생성할 수 있습니다.[2][1]

***

### 1. 명령 프롬프트 실행

- Windows 검색창에 "cmd" 입력 후 엔터.[1]

***

### 2. 프로젝트 폴더 이동

- 예시:  
```sh
cd C:\Users\사용자명\myproject
```
원하는 경로로 이동하세요.[1]

***

### 3. 가상환경 생성

- 명령어 입력:  
```sh
python -m venv venv
```
여기서 `venv`는 가상환경 폴더명입니다. 원하는 이름으로 바꿀 수 있습니다.[1]

***

### 4. 가상환경 활성화

- 명령어 입력:  
```sh
venv\Scripts\activate
```
프롬프트에 `(venv)`가 뜨면 가상환경이 활성화된 것입니다.[2][1]

***

### 가상환경 비활성화

- 명령어 입력:  
```sh
deactivate
```
가상환경에서 벗어날 때 사용합니다.[1]

***

이 순서대로 하면 Windows cmd에서 Python 가상환경을 손쉽게 만들고 사용할 수 있습니다.[2][1]

[1](https://developers.solapi.dev/sdk-list/Python/send-message)
[2](https://pydigger.com/pypi/solapi-sms)

환경변수(PATH) 우선순위 확인

설치 후 명령 프롬프트에서

text
where python
python --version
를 다시 실행하면
예) C:\Users\cwj\AppData\Local\Programs\Python\Python3x\python.exe
등 실제 설치 경로가 나와야 합니다.